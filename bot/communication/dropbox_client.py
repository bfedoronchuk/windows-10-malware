from dropbox import Dropbox
from dropbox.exceptions import ApiError


def load_from_dropbox(api_key: str, file_name: str):
    """
    Loads content from Dropbox.
    :param api_key: Dropbox API key
    :param file_name: file to load
    :return: saved local file name
    """
    dropbox_client = Dropbox(api_key)
    try:
        (metadata, response) = dropbox_client.files_download('/' + file_name)
    except ApiError:
        return None
    finally:
        dropbox_client.close()
    data: bytes = response.content
    with open(file_name, 'wb') as download_output_file:
        download_output_file.write(data)
    return file_name


def upload_to_dropbox(api_key: str, src_file: str, dst_file: str) -> bool:
    """
    Uploads content to Dropbox.
    :param api_key: Dropbox API key
    :param src_file: source file name
    :param dst_file: destination file name in Dropbox
    :return: True, if uploading was successful and False otherwise
    """
    dropbox_client = Dropbox(api_key)

    with open(src_file) as file_to_upload:
        content = file_to_upload.read()

    byte_content = content.encode('UTF-8')
    try:
        dropbox_client.files_upload(byte_content, dst_file)
        return True
    except ApiError:
        return False
    finally:
        dropbox_client.close()


if __name__ == '__main__':
    upload_to_dropbox(
        '',  # pass key
        'content-to-upload',
        '/destination-file.txt'
    )
