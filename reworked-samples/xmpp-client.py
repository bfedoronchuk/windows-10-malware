from sleekxmpp import ClientXMPP


class ReceiveBot(ClientXMPP):

    def __init__(self, jid, password):
        ClientXMPP.__init__(self, jid, password)

        self.add_event_handler("session_start", self.session_start, threaded=True)
        self.add_event_handler("message", self.message)

    def session_start(self, event):
        self.send_presence()

    def message(self, msg):
        if msg['type'] in ('normal', 'chat'):
            print("The message you sent was: " + msg['body'])
        self.disconnect(wait=True)


class SendMsgBot(ClientXMPP):

    def __init__(self, jid, password, recipient, message):
        ClientXMPP.__init__(self, jid, password)

        self.recipient = recipient
        self.msg = message

        self.add_event_handler("session_start", self.start, threaded=True)

    def start(self, event):
        self.send_presence()
        self.get_roster()

        self.send_message(mto=self.recipient,
                          mbody=self.msg,
                          mtype='chat')

        self.disconnect(wait=True)


def xmpp_send(xmpsndr, xmppas, xmptar, messagestr):
    xmpp = SendMsgBot(xmpsndr, xmppas, xmptar, messagestr)
    xmpp.register_plugin('xep_0030')  # Service Discovery
    xmpp.register_plugin('xep_0199')  # XMPP Ping

    if xmpp.connect():
        xmpp.process(block=True)
        print("Done")
    else:
        print("Unable to connect.")


def xmpp_receive(xmprcvr, xmppas):
    xmpp = ReceiveBot(xmprcvr, xmppas)
    xmpp.register_plugin('xep_0030')  # Service Discovery
    xmpp.register_plugin('xep_0004')  # Data Forms
    xmpp.register_plugin('xep_0060')  # PubSub
    xmpp.register_plugin('xep_0199')  # XMPP Ping

    if xmpp.connect():
        xmpp.process(block=True)

        print("Done")
    else:
        print("Unable to connect.")


xmpp_receive('webgoat1@jabb3r.org', 'r32fRibUmBZ5K')

# message = 'This message is sent from Python using sleekxmpp library.'
# xmpp_send('webgoat1@jabb3r.org', 'r32fRibUmBZ5K', 'webgoat2@jabb3r.org', message)
